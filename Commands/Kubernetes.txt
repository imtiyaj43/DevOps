Pod Command:
	• kubectl get pod : Get pod
	• kubectl get pod -o wide : Get pod wide information
	• kubectl get pod -w : Get pod with watch
	• kubectl edit pod <pod_name> : Edit pod
	• kubectl describe pod <pod_name> : Describe pod
	• kubectl delete pod <pod_name> : Delete pod
	• kubectl logs pod <pod_name> : Logs of the pod
	• kubectl exec -it pod <pod_name> /bin/bash : Execute into (inside) pod

Node Commands:
	• kubectl describe node <node_name> : Describe Node
	• kubectl get node <node_name> -o yaml : Get node in yaml
	• kubectl get node <node_name> : Get node
	• kubectl drain node <node_name> : Drain Node
	• kubectl cordon node <node_name> : Cordon node
	• kubectl uncordon node <node_name> : Uncordon node

Creating Objects:-
	• kubectl apply -f <file_name>.yaml : Create resource
	• kubectl apply -f <file1>.yaml -f <file2>.yaml : Create from multiple files
	• kubectl apply -f ./<directory_name> : Create all resources from YAML files in a directory:
	• kubectl apply -f https://<url> : Create from remote url
	• kubectl run <pod_name> --image=<image_name> : Create pod
	• kubectl run <pod_name> --image=<image_name> --port= <port> --expose : Create pod, then expose it as service
	• kubectl run <pod_name> --image=<image_name>  --dry-run-client -o yaml > <file_name>.yaml : Generate Pod YAML file (client-side dry-run)
	• kubectl create deployment <deployment_name>  --image=<image_name> : Create Deployment
	• kubectl create deployment <deployment_name> --image=<image_name>--dry-run-client -o yaml > <file_name>.yaml : Generate Deployment YAML file (client-side dry-run)
	• kubectl expose deployment <deployment_name> --type=<service-type> --port=<port> --target-port=<target_port> : Create a Service of a specific type (e.g., ClusterIP, NodePort)
	• kubectl create service <service-type> <service_name> --tcp=<port>:<target_port> --dry-run=client -o yaml > <file_name>.yaml : Create Service YAML File (dry-run)
	• kubectl expose <pod/deployment> <name> --type=<service-type> --port=<port> --target-port=<target_port> : Expose a Pod or Deployment as a Service
	• kubectl create configmap <configmap_name> --from-literal=<key1>=<value1> --from-literal=<key2>=<value2> : Create ConfigMap from Key-Value pairs (inline)
	• kubectl create configmap <configmap_name> --from-file=<file_name> : Create ConfigMap from a file
	• kubectl create configmap <configmap_name> --from-env-file=<file_name> : Create ConfigMap from an environment file
	• kubectl create secret generic <secret_name> --from-literal=<key1>=<value1> --from-literal=<key2>=<value2> : Create Secret from Key-Value pairs
	• kubectl create secret generic <secret_name> --from-file=<file_name> : Create Secret from a file


Monitoring Usage  Commands:-
	• kubectl top node <node_name> : Get node CPU and Memory Utilization
	• kubectl top pod <pods_name> : Get pod CPU and Memory Utilization

Deployment Commands:-
	• kubectl get deployment <deployment_name> : Get Deployment
	• kubectl get deployment <deployment_name> -o yaml : Get Deployment in YAML format
	• kubectl get deployment <deployment_name> -o wide : Get Deployment in wide information
	• kubectl edit deployment <deployment_name> : Edit Deployment
	• kubectl describe deployment <deployment_name> : Describe Deployment
	• kubectl delete deployment <deployment_name> : Delete Deployment
	• kubectl scale deployment <deployment_name> --replicas=<replicas> : Scale Deployment with replicas

Service Commands:-
	• kubectl get service <service> : Get service
	• kubectl get service <service> -o yaml : Get service in YAML format
	• kubectl get service <service> -o wide : Get service in Wide Information
	• kubectl edit service <service> : Edit service
	• kubectl describe service <service> : Describe service
	• kubectl delete service <service> : Delete service

Ingress Commands:-
	• kubectl get ingress : Get ingress
	• kubectl get ingress -o yaml : Get ingress in YAML format
	• kubectl get ingress -o wide : Get ingress in Wide Information
	• kubectl edit ingress <ingress_name> : Edit ingress
	• kubectl describe ingress <ingress_name> : Describe ingress
	• kubectl delete ingress <ingress_name> : Delete ingress

Endpoints Commands:-
	• kubectl get endpoints <endpoints_name> : Get endpoints

DaemonSet Commands:-
	• kubectl get daemonset < daemonset_name> : Get Daemonset
	• kubectl get daemonset <daemonset_name> -o yaml : Get Daemonset in YAML format
	• kubectl edit daemonset <daemonset_name> : Edit Daemonset
	• kubectl describe daemonset <daemonset_name> : Describe Daemonset
	• kubectl delete daemonset <daemonset_name> : Delete Daemonset

Job Commands:-
	• kubectl get job <job_name> : Get Job
	• kubectl get job <job_name> -o yaml : Get Job in YAML format
	• kubectl edit job <job_name> : Edit Job
	• kubectl describe job <job_name> : Describe Job
	• kubectl delete job <job_name> : Delete Job

Rollout Commands:-
	• kubectl rollout restart deployment <deployment_name> : Restart Deployment
	• kubectl rollout undo deployment <deployment_name> : Undo Deployment with the Latest Revision
	• kubectl rollout undo deployment <deployment_name> --to-revision=<revision_number> : Undo Deployment with Specified Revision
	• kubectl rollout history deployment <deployment_name> --revision=<revision_number> : Get Specified revision of deployments

Secret Commands:-
	• kubectl get secret <secret_name> : Get Secret
	• kubectl describe secret <secret_name> : Describe Secret
	• kubectl delete secret <secret_name> : Delete Secret
	• kubectl edit secret <secret_name> : Edit Secret

